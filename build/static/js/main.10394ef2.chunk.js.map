{"version":3,"sources":["contexts/CurrentUserContext.js","auth.js","images/logo.svg","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/Api.js","components/Dashboard.js","components/Login.js","components/Register.js","images/icons/icon-success.svg","images/icons/icon-fail.svg","components/InfoTooltip.js","components/ProtectedRoute.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","BASE_URL","Header","props","history","useHistory","className","src","logo","alt","loggedIn","userEmail","onClick","localStorage","removeItem","onLogout","push","to","navLink","navTitle","Card","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","onCardClick","link","onCardDelete","type","aria-label","name","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","item","Footer","PopupWithForm","isOpen","onClose","onSubmit","title","inputs","btnTitle","EditAvatarPopup","avaRef","useRef","onChange","e","current","value","target","ref","defaultValue","placeholder","id","required","preventDefault","onUpdateAvatar","EditProfilePopup","useState","setName","description","setDescription","useEffect","minLength","maxLength","onUpdateUser","AddPlacePopup","placeName","setPlaceName","placeLink","setPlaceLink","onAddCard","ImagePopup","appApi","config","this","_url","url","_headers","headers","res","err","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","data","method","body","JSON","stringify","liked","unsetLike","setLike","authorization","Dashboard","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","setCards","closeAllPopups","all","getUserInfo","getInitialCards","values","userData","initialCards","handleUser","catch","console","log","message","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","newAvatar","setAvatar","updatedAvatar","newUserData","setUserInfo","updatedUserData","newCardData","addCard","addedCard","Login","loginUser","onCredentialsChange","credentials","email","password","Register","registerUser","InfoTooltip","successIcon","iconSuccess","iconFail","ProtectedRoute","Component","component","App","setLoggedIn","setUserEmail","setCurrentUser","isInformerPopupOpen","setInformerPopupOpen","setCredentials","messageToUser","setMessageToUser","popupIconSuccess","setPopupIconSuccess","handleCredentialsChange","handleLoggedIn","trueOrFalse","openInformerPopup","getItem","token","Accept","Authorization","response","auth","path","setItem","error","Provider","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10394ef2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = ({ email, password }) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const authorize = ({ email, password }) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email: email, password: password }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n      }\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.2e17206c.svg\";","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header(props) {\r\n  const history = useHistory();\r\n\r\n  function signOut() {\r\n    localStorage.removeItem('token');\r\n    props.onLogout(false);\r\n    history.push('/sing-in');\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\r\n      <div className=\"header__bar\">\r\n        {props.loggedIn ? (\r\n          <>\r\n            <span className=\"header__text\">{props.userEmail}</span>\r\n            <button onClick={signOut} className=\"header__button\">\r\n              Выход\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <Link to={props.navLink} className=\"header__link\">\r\n            {props.navTitle}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"element\">\r\n      <li className=\"element__item\">\r\n        <img\r\n          onClick={handleClick}\r\n          src={props.card.link}\r\n          alt=\"Фото красивого места\"\r\n          className=\"element__image\"\r\n        />\r\n\r\n        {isOwn ? (\r\n          <button\r\n            onClick={handleDeleteClick}\r\n            className=\"element__btn-remove\"\r\n            type=\"button\"\r\n            aria-label=\"Удалить карточку\"\r\n          ></button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </li>\r\n\r\n      <li className=\"element__item\">\r\n        <div className=\"element__body\">\r\n          <h2 className=\"element__title\">{props.card.name}</h2>\r\n\r\n          <div className=\"element__like-zone\">\r\n            <button\r\n              onClick={handleLikeClick}\r\n              className={`element__btn-like${\r\n                isLiked ? ' element__btn-like_clicked' : ''\r\n              }`}\r\n              type=\"button\"\r\n              aria-label=\"Поставить либо убрать лайк\"\r\n            ></button>\r\n            <p className=\"element__likes\">{props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__data\">\r\n          <button\r\n            onClick={props.onEditAvatar}\r\n            className=\"profile__btn-edit-avatar\"\r\n          >\r\n            <img\r\n              src={currentUser.avatar}\r\n              alt=\"Аватарка (фото) владельца профиля\"\r\n              className=\"profile__avatar\"\r\n            />\r\n          </button>\r\n\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n\r\n            <button\r\n              onClick={props.onEditProfile}\r\n              className=\"profile__btn-edit\"\r\n              type=\"button\"\r\n              aria-label=\"Открыть окно редактирования профиля\"\r\n            ></button>\r\n\r\n            <p className=\"profile__about\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          onClick={props.onAddPlace}\r\n          className=\"profile__btn-add\"\r\n          type=\"button\"\r\n          aria-label=\"Открыть окно добавления новой карточки\"\r\n        ></button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {props.cards.map((item) => (\r\n          <Card\r\n            card={item}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n            key={item._id}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","function PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup${props.isOpen ? ' popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button onClick={props.onClose} className=\"popup__btn-close\" type=\"button\" aria-label=\"Закрыть окно\"></button>\r\n\r\n        <form onSubmit={props.onSubmit} className=\"form\" name={props.name}>\r\n          <h2 className=\"form__title\">{props.title}</h2>\r\n\r\n          {props.inputs}\r\n\r\n          <button className=\"form__btn-save\" name=\"saveButton\">{props.btnTitle}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avaRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\r\n\r\n\r\n  function handleChangeAva(e) {\r\n    avaRef.current.value = e.target.value;\r\n  }\r\n  \r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateAvatar({\r\n      avatar: avaRef.current.value\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm\r\n        title = \"Обновить аватар\"\r\n        name = \"avatar\"\r\n        btnTitle = \"Сохранить\"\r\n        inputs = {\r\n          <>\r\n            <input onChange={handleChangeAva} ref={avaRef} type=\"url\" className=\"form__text-input\" name=\"avatar\" defaultValue=\"\" placeholder=\"Ссылка на аватарку\" id=\"avatar\" required />\r\n            <span className=\"form__input-error\" id=\"avatar-error\"></span>\r\n          </>\r\n        }\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n  ","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditProfilePopup(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n\r\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n  \r\n  function handleChangeDescription(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm\r\n        title = \"Редактировать профиль\"\r\n        name = \"profile\"\r\n        btnTitle = \"Сохранить\"\r\n        inputs = {\r\n          <>\r\n            <input onChange={handleChangeName} defaultValue={name} type=\"text\" className=\"form__text-input\" name=\"name\" placeholder=\"Имя деятеля\" minLength=\"2\" maxLength=\"40\" id=\"name\" required />\r\n            <span className=\"form__input-error\" id=\"name-error\"></span>\r\n\r\n            <input onChange={handleChangeDescription} defaultValue={description} type=\"text\" className=\"form__text-input\" name=\"about\" placeholder=\"Деятельность\" minLength=\"2\" maxLength=\"200\" id=\"about\" required />\r\n            <span className=\"form__input-error\" id=\"about-error\"></span>\r\n          </>\r\n        }\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n  ","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [placeName, setPlaceName] = React.useState('');\r\n  const [placeLink, setPlaceLink] = React.useState('');\r\n\r\n  function handleChangeName(e) {\r\n    setPlaceName(e.target.value);\r\n  }\r\n\r\n  function handleChangeLink(e) {\r\n    setPlaceLink(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddCard({\r\n      name: placeName,\r\n      link: placeLink,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm\r\n        title=\"Новое место\"\r\n        name=\"card\"\r\n        btnTitle=\"Создать\"\r\n        inputs={\r\n          <>\r\n            <input\r\n              onChange={handleChangeName}\r\n              defaultValue={placeName}\r\n              type=\"text\"\r\n              className=\"form__text-input\"\r\n              name=\"name\"\r\n              placeholder=\"Название\"\r\n              minLength=\"1\"\r\n              maxLength=\"30\"\r\n              id=\"name\"\r\n              required\r\n            />\r\n            <span className=\"form__input-error\" id=\"name-error\"></span>\r\n\r\n            <input\r\n              onChange={handleChangeLink}\r\n              defaultValue={placeLink}\r\n              type=\"url\"\r\n              className=\"form__text-input\"\r\n              name=\"link\"\r\n              placeholder=\"Ссылка на картинку\"\r\n              id=\"link\"\r\n              required\r\n            />\r\n            <span className=\"form__input-error\" id=\"link-error\"></span>\r\n          </>\r\n        }\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","function ImagePopup(props) {\r\n  return (\r\n    <div className={`popup${props.isOpen ? ' popup_opened' : ''}`}>\r\n      <div className=\"popup__container popup__container_theme_dark\">\r\n        <button onClick={props.onClose} className=\"popup__btn-close\" type=\"button\" aria-label=\"Закрыть окно\"></button>\r\n\r\n        <figure className=\"popup__image-container\">\r\n          <img src={props.card.link} alt=\"Фото красивого места на весь экран\" className=\"popup__image\" />\r\n\r\n          <figcaption className=\"popup__image-title\">{props.card.name}</figcaption>\r\n        </figure>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","class Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n\r\n  _getResponseData(res, err) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}. ${err}`));\r\n  }\r\n\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Карточки не получены...');\r\n    });\r\n  }\r\n\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Новая карточка не добавлена...');\r\n    });\r\n  }\r\n\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Карточка не удалена...');\r\n    });\r\n  }\r\n\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Данные пользователя не получены...');\r\n    });\r\n  }\r\n\r\n\r\n  setUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Данные пользователя не обновлены...');\r\n    });\r\n  }\r\n\r\n\r\n  setAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Аватар пользователя не обновлён...');\r\n    });\r\n  }\r\n\r\n\r\n  setLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Лайк не поставлен...');\r\n    });\r\n  }\r\n\r\n\r\n  unsetLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Лайк не удалён...');\r\n    });\r\n  }\r\n\r\n\r\n  changeLikeCardStatus(id, liked) {\r\n    if(liked) {\r\n      return this.unsetLike(id);\r\n    }\r\n\r\n    return this.setLike(id);\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Object with methods to send and request all data on the server side. */\r\nexport const appApi = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-16\",\r\n  headers: {\r\n\t\tauthorization: '7e8aae9c-bb81-4fe9-ac24-f206bc985678',\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n","import React from 'react';\r\n\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\n\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nimport { appApi } from '../utils/Api';\r\n\r\nfunction Dashboard(props) {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\r\n    false\r\n  );\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\r\n    false\r\n  );\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  // const [props.currentUser, props.handleUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([\r\n      //в Promise.all передаем массив промисов которые нужно выполнить\r\n      appApi.getUserInfo(),\r\n      appApi.getInitialCards(),\r\n    ])\r\n      .then((values) => {\r\n        //попадаем сюда когда массив промисов будут выполнены\r\n        const [userData, initialCards] = values;\r\n\r\n        props.handleUser(userData);\r\n        setCards(initialCards);\r\n      })\r\n      .catch((err) => {\r\n        //попадаем сюда если хотя бы один из промисов завершится ошибкой\r\n        console.log(err.message);\r\n      });\r\n      // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    setImagePopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setImagePopupOpen(false);\r\n  }\r\n\r\n  function handleUpdateAvatar(newAvatar) {\r\n    appApi.setAvatar(newAvatar).then((updatedAvatar) => {\r\n      props.handleUser(updatedAvatar);\r\n      closeAllPopups();\r\n    });\r\n  }\r\n\r\n  function handleUpdateUser(newUserData) {\r\n    appApi.setUserInfo(newUserData).then((updatedUserData) => {\r\n      props.handleUser(updatedUserData);\r\n      closeAllPopups();\r\n    });\r\n  }\r\n\r\n  function handleAddPlaceSubmi(newCardData) {\r\n    appApi.addCard(newCardData).then((addedCard) => {\r\n      setCards([addedCard, ...cards]);\r\n      closeAllPopups();\r\n    });\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === props.currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    appApi.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\r\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    appApi.deleteCard(card._id).then((newCard) => {\r\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.filter((c) => c._id !== card._id);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        loggedIn={props.loggedIn}\r\n        userEmail={props.userEmail}\r\n        onLogout={props.onLogout}\r\n      />\r\n\r\n      <Main\r\n        // user={props.currentUser}\r\n        cards={cards}\r\n        onCardLike={handleCardLike}\r\n        onCardDelete={handleCardDelete}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onCardClick={handleCardClick}\r\n      />\r\n\r\n      <Footer />\r\n\r\n      <EditAvatarPopup\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateAvatar={handleUpdateAvatar}\r\n      />\r\n\r\n      <EditProfilePopup\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateUser}\r\n      />\r\n\r\n      <AddPlacePopup\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onAddCard={handleAddPlaceSubmi}\r\n      />\r\n\r\n      <PopupWithForm\r\n        title=\"Вы уверены?\"\r\n        name=\"confirmation\"\r\n        btnTitle=\"Да\"\r\n        isOpen={false}\r\n        onClose={closeAllPopups}\r\n      />\r\n\r\n      <ImagePopup\r\n        card={selectedCard}\r\n        isOpen={isImagePopupOpen}\r\n        onClose={closeAllPopups}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","function Login(props) {\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"credentials\">\r\n        <form onSubmit={props.loginUser} className=\"form\" name=\"login\">\r\n          <h2 className=\"form__title form__title_theme_dark\">Вход</h2>\r\n\r\n          <input\r\n            onChange={props.onCredentialsChange}\r\n            value={props.credentials.email}\r\n            type=\"email\"\r\n            className=\"form__text-input form__text-input_theme_dark\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            id=\"email\"\r\n            required\r\n          />\r\n          <span className=\"form__input-error\" id=\"email-error\"></span>\r\n\r\n          <input\r\n            onChange={props.onCredentialsChange}\r\n            value={props.credentials.password}\r\n            type=\"password\"\r\n            className=\"form__text-input form__text-input_theme_dark\"\r\n            name=\"password\"\r\n            placeholder=\"Пароль\"\r\n            id=\"password\"\r\n            required\r\n          />\r\n          <span className=\"form__input-error\" id=\"password-error\"></span>\r\n\r\n          <button\r\n            className=\"form__btn-save form__btn-save_theme_light\"\r\n            name=\"saveButton\"\r\n          >\r\n            Войти\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"credentials\">\r\n        <form\r\n          onSubmit={props.registerUser}\r\n          className=\"form\"\r\n          name=\"registration\"\r\n        >\r\n          <h2 className=\"form__title form__title_theme_dark\">Регистрация</h2>\r\n\r\n          <input\r\n            onChange={props.onCredentialsChange}\r\n            value={props.credentials.email}\r\n            type=\"email\"\r\n            className=\"form__text-input form__text-input_theme_dark\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            id=\"email\"\r\n            required\r\n          />\r\n          <span className=\"form__input-error\" id=\"email-error\"></span>\r\n\r\n          <input\r\n            onChange={props.onCredentialsChange}\r\n            value={props.credentials.password}\r\n            type=\"password\"\r\n            className=\"form__text-input form__text-input_theme_dark\"\r\n            name=\"password\"\r\n            placeholder=\"Пароль\"\r\n            id=\"password\"\r\n            required\r\n          />\r\n          <span className=\"form__input-error\" id=\"password-error\"></span>\r\n\r\n          <button\r\n            className=\"form__btn-save form__btn-save_theme_light\"\r\n            name=\"saveButton\"\r\n          >\r\n            Зарегистрироваться\r\n          </button>\r\n\r\n          <p className=\"form__suggestion\">\r\n            Уже зарегистрированы?{' '}\r\n            <Link to=\"/sign-in\" className=\"form__link\">\r\n              Войти\r\n            </Link>\r\n          </p>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/icon-success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/icon-fail.df8eddf6.svg\";","import iconSuccess from '../images/icons/icon-success.svg';\r\nimport iconFail from '../images/icons/icon-fail.svg';\r\n\r\nfunction InfoTooltip(props) {\r\n  return (\r\n    <div className={`popup${props.isOpen ? ' popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          onClick={props.onClose}\r\n          className=\"popup__btn-close\"\r\n          type=\"button\"\r\n          aria-label=\"Закрыть окно\"\r\n        ></button>\r\n\r\n        <img\r\n          src={props.successIcon ? iconSuccess : iconFail}\r\n          alt=\"Success icon\"\r\n          className=\"popup__icon\"\r\n        />\r\n\r\n        <p className=\"popup__message\">{props.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// этот компонент принимает другой компонент в качестве пропса\r\n// он также может взять неограниченное число пропсов и передать их новому компоненту\r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n      }\r\n    </Route>\r\n)}\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState } from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport * as auth from '../auth.js';\r\n\r\nimport Header from './Header';\r\nimport Dashboard from './Dashboard';\r\n\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport ProtectedRoute from './ProtectedRoute';\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [isInformerPopupOpen, setInformerPopupOpen] = useState(false);\r\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\r\n  const [messageToUser, setMessageToUser] = useState('');\r\n  const [popupIconSuccess, setPopupIconSuccess] = useState(false);\r\n\r\n  function handleCredentialsChange(e) {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  function handleUser(user) {\r\n    setCurrentUser(user);\r\n  }\r\n\r\n  function handleLoggedIn(trueOrFalse) {\r\n    setLoggedIn(trueOrFalse);\r\n  }\r\n\r\n  function openInformerPopup(message, successIcon = false) {\r\n    setMessageToUser(message);\r\n    setInformerPopupOpen(true);\r\n    setPopupIconSuccess(successIcon);\r\n  }\r\n\r\n  function closeInformerPopup() {\r\n    setInformerPopupOpen(false);\r\n    setMessageToUser('');\r\n    if (popupIconSuccess) {\r\n      setCredentials({ email: '', password: '' });\r\n      history.push('/sing-in');\r\n    }\r\n    setPopupIconSuccess(false);\r\n  }\r\n\r\n  function handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    auth.authorize(credentials).then((data) => {\r\n      if (!data) {\r\n        openInformerPopup('Что-то пошло не так!');\r\n        return;\r\n      }\r\n\r\n      if (data.message) {\r\n        openInformerPopup(data.message);\r\n        return;\r\n      } else if (data.token) {\r\n        setCredentials({ email: '', password: '' });\r\n        handleLoggedIn(true);\r\n        history.push('/');\r\n      } else {\r\n        openInformerPopup('Барабашка взял так и учудил конкретно :-)');\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    auth.register(credentials).then((data) => {\r\n      if (!data) {\r\n        openInformerPopup('Что-то пошло не так!');\r\n        return;\r\n      }\r\n\r\n      if (data.error) {\r\n        openInformerPopup(data.error);\r\n        return;\r\n      } else {\r\n        openInformerPopup('Регистрация успешна!', true);\r\n        // history.push('/sing-in');\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (token) {\r\n        auth.getContent(token).then((res) => {\r\n          if (res) {\r\n            setUserEmail(res.data.email);\r\n            handleLoggedIn(true);\r\n            history.push('/');\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // // Возвращаем функцию, которая удаляет эффекты\r\n    // return () => {\r\n    //   setUserEmail('');\r\n    // };\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/sign-in\">\r\n          <Header navLink=\"/sign-up\" navTitle=\"Регистрация\" />\r\n          <Login\r\n            credentials={credentials}\r\n            onCredentialsChange={handleCredentialsChange}\r\n            loginUser={handleLogin}\r\n          />\r\n        </Route>\r\n\r\n        <Route path=\"/sign-up\">\r\n          <Header navLink=\"/sign-in\" navTitle=\"Войти\" />\r\n          <Register\r\n            credentials={credentials}\r\n            onCredentialsChange={handleCredentialsChange}\r\n            registerUser={handleRegister}\r\n          />\r\n        </Route>\r\n\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n          <ProtectedRoute\r\n            path=\"/\"\r\n            currentUser={currentUser}\r\n            handleUser={handleUser}\r\n            loggedIn={loggedIn}\r\n            userEmail={userEmail}\r\n            onLogout={handleLoggedIn}\r\n            component={Dashboard}\r\n          />\r\n        </CurrentUserContext.Provider>\r\n      </Switch>\r\n\r\n      <InfoTooltip\r\n        message={messageToUser}\r\n        successIcon={popupIconSuccess}\r\n        isOpen={isInformerPopupOpen}\r\n        onClose={closeInformerPopup}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}